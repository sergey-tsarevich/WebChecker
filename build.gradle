apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin:'application'

group= '<44>'
version = '0.2b'
mainClassName = "info.tss.netassistant.run.Starter"

distZip {
    into(project.name-project.version) {
        from '.'
        include 'conf/*'
    }
}
//applicationDefaultJvmArgs = [ "-Duser.timezone=EET -XX:+HeapDumpOnOutOfMemoryError -XX:MaxPermSize=128M -Xmx196m" ]

startScripts {  // workaround for adding 'dist/conf' to classpath
    classpath += files('src/dist/conf')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile    = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\conf', '%APP_HOME%\\conf')
        unixScriptFile.text    = unixScriptFile.text.replace('$APP_HOME/lib/conf', '$APP_HOME/conf')
    }
}

repositories {
    flatDir { dirs "lib" }
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.1.8'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'javax.mail:mail:1.4.3'
    compile 'org.jsoup:jsoup:1.7.3'
    compile 'org.xerial:sqlite-jdbc:3.7.2'
    compile 'org.quartz-scheduler:quartz:2.1.7'

    testCompile 'junit:junit:4.11'

    compile ":sqlite-connection-pool:"
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/groovy']
        }
        resources.srcDir "src/groovy"
        java {
            srcDirs = ['src/java']
        }
        resources.srcDir "src/java"
    }

    test {
        groovy {
            srcDirs = ['test/groovy']
        }
        java {
            srcDirs = ['test/java']
        }
    }
}
